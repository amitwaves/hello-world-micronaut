plugins {
    id "org.jetbrains.kotlin.jvm" version "1.5.0"
    id "org.jetbrains.kotlin.kapt" version "1.5.0"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.5.0"
    id "com.github.johnrengelman.shadow" version "6.0.0"
    id "io.micronaut.application" version "2.0.3"
}



version "0.1"
group "com.amitwaves.helloworld"

repositories {
    mavenCentral()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation 'io.micronaut:micronaut-runtime'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "io.micronaut.rxjava2:micronaut-rxjava2"
    implementation 'io.micronaut.rxjava2:micronaut-rxjava2-http-server-netty'
    implementation 'io.micronaut.rxjava2:micronaut-rxjava2-http-client'
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt 'io.micronaut:micronaut-inject-java'
    kapt 'io.micronaut:micronaut-validation'
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest 'io.micronaut:micronaut-inject-java'
    runtimeOnly 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.0'
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.7'
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation 'io.micronaut.test:micronaut-test-kotlintest:2.3.7'
    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation 'io.kotlintest:kotlintest-runner-junit5'
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spek_version"
}

test.classpath += configurations.developmentOnly

mainClassName = "com.amitwaves.helloworld.Application"


test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    javaParameters = true 
	}
}



shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
